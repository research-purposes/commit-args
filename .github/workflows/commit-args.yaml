name: Build on PR Comment

on:
  issue_comment:
    types:
      - created
jobs:
  build-1:
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, 'setup')
    runs-on: ubuntu-latest
    steps:
          
      - name: Split version code
        uses: Team-Travel-Bareng/prompt-args@comment-flags
        id: split
        with:
          comment: ${{ github.event.comment.body }}

      - name: Some other action
        run: |
          echo ${{ fromJSON(steps.split.outputs.result).env }}
          echo ${{ fromJSON(steps.split.outputs.result).tags }}
          echo ${{ fromJSON(steps.split.outputs.result).address }}
          echo ${{ fromJSON(steps.split.outputs.result).playbook }}
          
      - name: test if
        id: test-if
        run: |
          build="build"
          setup="setup"
          if [[ "${{ startsWith(github.event.comment.body, 'setup') }}" == 'true' ]]; then
            echo ::set-output name=test-output::$setup
          fi
          if [[ "${{ startsWith(github.event.comment.body, 'build') }}" == 'true' ]]; then
            echo ::set-output name=test-output::$build
          fi          
               
#       - name: Supposedly failed
#         run: exit 1
  
        
      - name: echo outputs
        run: echo ${{ steps.test-if.outputs.test-output }}
          
  build-2:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, 'build')
    steps:
      - name: Succeed
        run: |
          echo "ok"
          exit 1
    
  run-if-fails:
    runs-on: ubuntu-latest
    needs: [build-1, build-2]
    if: always() && (needs.build-1.result == 'success' || needs.build-2.result == 'failure')
    steps:
      - name: Needs context
        env:
          NEEDS_CONTEXT: ${{ toJSON(needs) }}
        run: |
          echo "$NEEDS_CONTEXT"
          echo ${{ needs.build-1.outputs.test-output }}
